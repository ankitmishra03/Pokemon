{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokemonName","setpokemonName","pokemonChosen","setpokemonChosen","name","species","img","hp","attack","defence","type","pokemon","setpokemon","className","onChange","event","target","value","onClick","Axios","get","then","response","console","log","data","sprites","other","dream_world","front_default","stats","base_stat","types","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAiEeA,MA5Df,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8BJ,mBAAS,CACrCK,KAAM,GACNC,QAAS,GACTC,IAAK,GACLC,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,KAAM,KAPR,mBAAOC,EAAP,KAAgBC,EAAhB,KA0BA,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,+CACA,uBACEH,KAAK,OACLI,SAAU,SAACC,GACTd,EAAec,EAAMC,OAAOC,UAGhC,wBAAQC,QA3BQ,WACpBC,IAAMC,IAAN,4CAA+CpB,IAAeqB,MAC5D,SAACC,GACCC,QAAQC,IAAIF,GACZV,EAAW,CACTR,KAAMJ,EACNK,QAASiB,EAASG,KAAKpB,QAAQD,KAC/BE,IAAKgB,EAASG,KAAKC,QAAQC,MAAMC,YAAYC,cAC7CtB,GAAIe,EAASG,KAAKK,MAAM,GAAGC,UAC3BvB,OAAQc,EAASG,KAAKK,MAAM,GAAGC,UAC/BtB,QAASa,EAASG,KAAKK,MAAM,GAAGC,UAChCrB,KAAMY,EAASG,KAAKO,MAAM,GAAGtB,KAAKN,OAEpCD,GAAiB,OAcjB,4BACA,qBAAKU,UAAU,iBAAf,SACIX,EAGA,qCACE,6BAAKS,EAAQP,OACb,qBAAK6B,IAAKtB,EAAQL,IAAK4B,IAAI,YAC3B,4CAAevB,EAAQN,WACvB,yCAAYM,EAAQD,QACpB,sCAASC,EAAQJ,MACjB,0CAAaI,EAAQH,UACrB,2CAAcG,EAAQF,cATxB,iECnCG0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4f942d9a.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction App() {\n  const [pokemonName, setpokemonName] = useState(\"\");\n  const [pokemonChosen, setpokemonChosen] = useState(false);\n  const [pokemon, setpokemon] = useState({\n    name: \"\",\n    species: \"\",\n    img: \"\",\n    hp: \"\",\n    attack: \"\",\n    defence: \"\",\n    type: \"\",\n  });\n  const searchPokemon = () => {\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`).then(\n      (response) => {\n        console.log(response);\n        setpokemon({\n          name: pokemonName,\n          species: response.data.species.name,\n          img: response.data.sprites.other.dream_world.front_default,\n          hp: response.data.stats[0].base_stat,\n          attack: response.data.stats[1].base_stat,\n          defence: response.data.stats[2].base_stat,\n          type: response.data.types[0].type.name,\n        });\n        setpokemonChosen(true);\n      }\n    );\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"TitleSection\">\n        <h1>Pokemon Stats</h1>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setpokemonName(event.target.value);\n          }}\n        />\n        <button onClick={searchPokemon}>Search Pokemon</button>\n        <div className=\"DisplaySection\">\n          {!pokemonChosen ? (\n            <h1>Please choose a Pokemon</h1>\n          ) : (\n            <>\n              <h1>{pokemon.name}</h1>\n              <img src={pokemon.img} alt=\"pokemon\" />\n              <h3>Species : {pokemon.species}</h3>\n              <h3>Type : {pokemon.type}</h3>\n              <h4>Hp: {pokemon.hp}</h4>\n              <h4>Attack: {pokemon.attack}</h4>\n              <h4>Defence: {pokemon.defence}</h4>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}